// Generated by Dagger (https://dagger.dev).
package com.example.mymovies.di;

import com.example.mymovies.data.remote.RemoteDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideRemoteDaoFactory implements Factory<RemoteDao> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public AppModule_ProvideRemoteDaoFactory(Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public RemoteDao get() {
    return provideRemoteDao(okHttpClientProvider.get());
  }

  public static AppModule_ProvideRemoteDaoFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new AppModule_ProvideRemoteDaoFactory(okHttpClientProvider);
  }

  public static RemoteDao provideRemoteDao(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRemoteDao(okHttpClient));
  }
}
