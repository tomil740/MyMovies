// Generated by Dagger (https://dagger.dev).
package com.example.mymovies.di;

import com.example.mymovies.domain.repository.MoviesRepository;
import com.example.mymovies.domain.useCases.GetItemFavoriteState;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideGetItemFavFactory implements Factory<GetItemFavoriteState> {
  private final Provider<MoviesRepository> repoProvider;

  public AppModule_ProvideGetItemFavFactory(Provider<MoviesRepository> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public GetItemFavoriteState get() {
    return provideGetItemFav(repoProvider.get());
  }

  public static AppModule_ProvideGetItemFavFactory create(Provider<MoviesRepository> repoProvider) {
    return new AppModule_ProvideGetItemFavFactory(repoProvider);
  }

  public static GetItemFavoriteState provideGetItemFav(MoviesRepository repo) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideGetItemFav(repo));
  }
}
