// Generated by Dagger (https://dagger.dev).
package com.example.mymovies.presntation.MovieItemPage;

import com.example.mymovies.domain.repository.MoviesRepository;
import com.example.mymovies.domain.useCases.GetItemFavoriteState;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieItemViewModel_Factory implements Factory<MovieItemViewModel> {
  private final Provider<MoviesRepository> moviesRepoProvider;

  private final Provider<GetItemFavoriteState> getItemFavoriteStateProvider;

  public MovieItemViewModel_Factory(Provider<MoviesRepository> moviesRepoProvider,
      Provider<GetItemFavoriteState> getItemFavoriteStateProvider) {
    this.moviesRepoProvider = moviesRepoProvider;
    this.getItemFavoriteStateProvider = getItemFavoriteStateProvider;
  }

  @Override
  public MovieItemViewModel get() {
    return newInstance(moviesRepoProvider.get(), getItemFavoriteStateProvider.get());
  }

  public static MovieItemViewModel_Factory create(Provider<MoviesRepository> moviesRepoProvider,
      Provider<GetItemFavoriteState> getItemFavoriteStateProvider) {
    return new MovieItemViewModel_Factory(moviesRepoProvider, getItemFavoriteStateProvider);
  }

  public static MovieItemViewModel newInstance(MoviesRepository moviesRepo,
      GetItemFavoriteState getItemFavoriteState) {
    return new MovieItemViewModel(moviesRepo, getItemFavoriteState);
  }
}
